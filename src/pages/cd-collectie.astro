---
import PageLayout from '@/layouts/Base.astro';
import FilterSortList from '@/components/FilterSortList.svelte'; // Importeer Svelte component
import CDCard from '@/components/CDCard.astro';              // Importeer Astro card component
import cdCollectionData from '@/data/cd_collection.json';

const releases = cdCollectionData?.releases || [];

// --- Configuratie specifiek voor CD's ---

// Velden om in te zoeken (basis paden)
// De Svelte component's getProperty kan hiermee overweg.
// Voor 'artists' is een specifieke check ingebouwd in het Svelte component.
const searchFields = ['basic_information.title', 'basic_information.artists'];

// Helper functie voor artiesten sorteren (lowercase, onbekend achteraan)
function formatArtistsForSort(artists) {
   if (!artists || artists.length === 0) return "zzzzzzz";
   return artists.map(artist => artist.name).join(', ').toLowerCase();
}

// Definieer de sorteer opties
const sortOptions = [
  {
    id: 'artistAZ', // Unieke ID voor deze optie
    label: 'Artiest (A-Z)', // Tekst op de knop
    order: 'asc', // Sorteer richting
    valueFn: item => formatArtistsForSort(item.basic_information?.artists) // Functie die de sorteerwaarde teruggeeft
  },
  {
    id: 'artistZA',
    label: 'Artiest (Z-A)',
    order: 'desc',
    valueFn: item => formatArtistsForSort(item.basic_information?.artists)
  },
  {
    id: 'yearNewOld',
    label: 'Jaar (Nieuw-Oud)',
    order: 'desc',
    valueFn: item => item.basic_information?.year || 0 // Geef 0 terug als jaar mist voor sorteren
  },
  {
    id: 'yearOldNew',
    label: 'Jaar (Oud-Nieuw)',
    order: 'asc',
    valueFn: item => item.basic_information?.year || 9999 // Geef hoog getal terug als jaar mist
  }
];

// ID van de initiÃ«le sortering die actief moet zijn
const initialSortId = 'artistAZ';

const meta = {
  title: "Mijn CD Collectie",
  description: "Een doorzoekbaar en sorteerbaar overzicht van de CDs in mijn Discogs collectie.",
};
---
<PageLayout meta={meta}>
  <h1 class="title mb-6 text-2xl font-bold">Mijn CD Collectie</h1>

  {/* Roep het Svelte component aan met client:load */}
  {/* Geef data en configuratie mee als props */}
  <FilterSortList
    client:load
    items={releases}
    searchFields={searchFields}
    sortOptions={sortOptions}
    initialSortId={initialSortId}
  >
    {/* Dit wordt in de 'item' slot van FilterSortList geplaatst */}
    {/* 'let:item' ontvangt de data van het huidige item van de Svelte component */}
    <Fragment slot="item" let:item>
      <CDCard release={item} /> {# Geef het item door aan je CDCard #}
    </Fragment>

    {/* Dit wordt in de 'no-results' slot geplaatst */}
    <Fragment slot="no-results">
      <p class="mt-6 text-center text-gray-500 dark:text-gray-400 col-span-full">
        Helaas, geen CD's gevonden die voldoen aan je filter.
      </p>
    </Fragment>
  </FilterSortList>

</PageLayout>