---
import PageLayout from "@/layouts/Base.astro";
import FilterSortList from "@/components/FilterSortList.svelte";
import CDCard from "@/components/CDCard.astro";
import cdCollectionData from "@/data/cd_collection.json";
import type { Release, Artist, SortOption } from "src/components/types"; // Import types

const releases: Release[] = cdCollectionData?.releases ?? []; // Use type and nullish coalescing

// --- Configuratie specifiek voor CD's ---
const searchFields: string[] = ["basic_information.title", "basic_information.artists"]; // Path for artists is handled specifically in Svelte component now

// Add types
function formatArtistsForSort(artists: Artist[] | undefined): string {
	if (!artists || artists.length === 0) return "zzzzzzz";
	return artists
		.map((artist: Artist) => artist.name)
		.join(", ")
		.toLowerCase();
}

// Use imported SortOption type
const sortOptions: SortOption[] = [
	{
		id: "artistAZ",
		label: "Artiest (A-Z)",
		order: "asc",
		valueFn: (item: Release) => formatArtistsForSort(item.basic_information?.artists), // Add type
	},
	{
		id: "artistZA",
		label: "Artiest (Z-A)",
		order: "desc",
		valueFn: (item: Release) => formatArtistsForSort(item.basic_information?.artists), // Add type
	},
	{
		id: "yearNewOld",
		label: "Jaar (Nieuw-Oud)",
		order: "desc",
		valueFn: (item: Release) => item.basic_information?.year ?? 0, // Add type, use nullish coalescing
	},
	{
		id: "yearOldNew",
		label: "Jaar (Oud-Nieuw)",
		order: "asc",
		valueFn: (item: Release) => item.basic_information?.year ?? 9999, // Add type, use nullish coalescing
	},
];

const initialSortId: string = "artistAZ"; // Ensure type consistency

const meta = {
	/* ... */
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6 text-2xl font-bold">Mijn CD Collectie</h1>

	<FilterSortList
		client:load
		items={releases}
		{searchFields}
		{/* Use shorthand passing */}
		{sortOptions}
		{/* Use shorthand passing */}
		{initialSortId}
		{/* Use shorthand passing */}
	>
		<Fragment slot="item" let:item>
			{
				/* Now 'item' should be correctly typed as Release within this scope if FilterSortList works */
			}
			<CDCard release={item} />
			<!-- Removed comment -->
		</Fragment>

		<Fragment slot="no-results">
			{/* ... no changes needed here ... */}
		</Fragment>
	</FilterSortList>
</PageLayout>
